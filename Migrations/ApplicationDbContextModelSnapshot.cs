// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuhasebeStokWebApp.Data;

#nullable disable

namespace MuhasebeStokWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(128)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(128)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Banka", b =>
                {
                    b.Property<Guid>("BankaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("BankaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BankaID");

                    b.ToTable("Bankalar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.BankaHareket", b =>
                {
                    b.Property<Guid>("BankaHareketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("BankaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CariID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DekontNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HareketTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("HedefKasaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IslemYapanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KarsiBankaAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KarsiIBAN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KarsiUnvan")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("KaynakKasaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReferansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferansTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransferID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BankaHareketID");

                    b.HasIndex("BankaID");

                    b.HasIndex("CariID");

                    b.HasIndex("HedefKasaID");

                    b.HasIndex("KaynakKasaID");

                    b.ToTable("BankaHareketleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.BankaHesap", b =>
                {
                    b.Property<Guid>("BankaHesapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("AcilisBakiye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("BankaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GuncelBakiye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HesapNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IBAN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("TRY");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubeAdi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubeKodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("YetkiliKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BankaHesapID");

                    b.HasIndex("BankaID");

                    b.ToTable("BankaHesaplari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.BankaHesapHareket", b =>
                {
                    b.Property<Guid>("BankaHesapHareketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("BankaHesapID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CariID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DekontNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DovizKuru")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HareketTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("HedefBankaHesapID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HedefBankaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HedefKasaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IslemTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("IslemYapanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KarsiBankaAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KarsiIBAN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KarsiParaBirimi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KarsiUnvan")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("KaynakKasaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReferansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferansTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransferID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BankaHesapHareketID");

                    b.HasIndex("BankaHesapID");

                    b.HasIndex("BankaID");

                    b.HasIndex("CariID");

                    b.HasIndex("HedefBankaHesapID");

                    b.HasIndex("HedefKasaID");

                    b.HasIndex("KaynakKasaID");

                    b.ToTable("BankaHesapHareketleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Birim", b =>
                {
                    b.Property<Guid>("BirimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("BirimAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BirimKodu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BirimSembol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SirketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BirimID");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Cari", b =>
                {
                    b.Property<Guid>("CariID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CariKodu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CariTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("OlusturanKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostaKodu")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("VarsayilanKurKullan")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VarsayilanParaBirimiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VergiDairesi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WebSitesi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Yetkili")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CariID");

                    b.HasIndex("VarsayilanParaBirimiId");

                    b.ToTable("Cariler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.CariHareket", b =>
                {
                    b.Property<Guid>("CariHareketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CariHareketId");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Alacak")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AlacakDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Borc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BorcDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CariID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CariId");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HareketTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OlusturanKullaniciId");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("ReferansID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReferansId");

                    b.Property<string>("ReferansNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferansTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TutarDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("VadeTarihi")
                        .HasColumnType("datetime2")
                        .HasColumnName("VadeTarihi");

                    b.HasKey("CariHareketID");

                    b.HasIndex("CariID");

                    b.ToTable("CariHareketler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Depo", b =>
                {
                    b.Property<Guid>("DepoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adres")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("DepoAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DepoID");

                    b.ToTable("Depolar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Fatura", b =>
                {
                    b.Property<Guid>("FaturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AklanmaNotu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("AklanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("AraToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AraToplamDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CariID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DovizKuru")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("DovizTuru")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FaturaNotu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FaturaNumarasi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FaturaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FaturaTuruID")
                        .HasColumnType("int");

                    b.Property<decimal?>("GenelToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GenelToplamDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("IndirimTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IndirimTutariDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KDVToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KDVToplamDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OdemeDurumu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OdemeTuruID")
                        .HasColumnType("int");

                    b.Property<decimal?>("OdenenTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("ResmiMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SiparisNumarasi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SozlesmeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VadeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("FaturaID");

                    b.HasIndex("CariID");

                    b.HasIndex("FaturaTuruID");

                    b.HasIndex("OdemeTuruID");

                    b.HasIndex("SozlesmeID");

                    b.ToTable("Faturalar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaAklamaKuyruk", b =>
                {
                    b.Property<Guid>("AklamaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AklananMiktar")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("AklanmaNotu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("AklanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DovizKuru")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(1m);

                    b.Property<int>("Durum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("FaturaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FaturaKalemID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ManuelKayit")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("TL");

                    b.Property<Guid?>("ResmiFaturaKalemID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SozlesmeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UrunID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AklamaID");

                    b.HasIndex("FaturaID");

                    b.HasIndex("FaturaKalemID");

                    b.HasIndex("SozlesmeID");

                    b.HasIndex("UrunID");

                    b.ToTable("FaturaAklamaKuyrugu");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaDetay", b =>
                {
                    b.Property<Guid>("FaturaDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("AklananMiktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("AklanmaTamamlandi")
                        .HasColumnType("bit");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Birim")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BirimFiyatDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BirimID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FaturaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IndirimOrani")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IndirimTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IndirimTutariDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KdvOrani")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KdvTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KdvTutariDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("NetTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetTutarDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SatirKdvToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SatirToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TutarDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UrunID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FaturaDetayID");

                    b.HasIndex("BirimID");

                    b.HasIndex("FaturaID");

                    b.HasIndex("UrunID");

                    b.ToTable("FaturaDetaylari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaOdeme", b =>
                {
                    b.Property<Guid>("OdemeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<Guid>("FaturaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OdemeTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("OdemeTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OdemeID");

                    b.HasIndex("FaturaID");

                    b.ToTable("FaturaOdemeleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaTuru", b =>
                {
                    b.Property<int>("FaturaTuruID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturaTuruID"));

                    b.Property<string>("FaturaTuruAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HareketTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("FaturaTuruID");

                    b.ToTable("FaturaTurleri");

                    b.HasData(
                        new
                        {
                            FaturaTuruID = 1,
                            FaturaTuruAdi = "Satış Faturası",
                            HareketTuru = "Çıkış",
                            Silindi = false
                        },
                        new
                        {
                            FaturaTuruID = 2,
                            FaturaTuruAdi = "Alış Faturası",
                            HareketTuru = "Giriş",
                            Silindi = false
                        });
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FiyatTipi", b =>
                {
                    b.Property<int>("FiyatTipiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FiyatTipiID"));

                    b.Property<string>("TipAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FiyatTipiID");

                    b.ToTable("FiyatTipleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Irsaliye", b =>
                {
                    b.Property<Guid>("IrsaliyeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("CariID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Durum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("FaturaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IrsaliyeNumarasi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("IrsaliyeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IrsaliyeTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IrsaliyeTuruID")
                        .HasColumnType("int");

                    b.Property<Guid>("OlusturanKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SonGuncelleyenKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IrsaliyeID");

                    b.HasIndex("CariID");

                    b.HasIndex("DepoID");

                    b.HasIndex("FaturaID");

                    b.HasIndex("IrsaliyeTuruID");

                    b.ToTable("Irsaliyeler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.IrsaliyeDetay", b =>
                {
                    b.Property<Guid>("IrsaliyeDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Birim")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BirimID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IndirimOrani")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IrsaliyeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("KdvOrani")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid?>("OlusturanKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SatirKdvToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SatirToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SonGuncelleyenKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UrunID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IrsaliyeDetayID");

                    b.HasIndex("BirimID");

                    b.HasIndex("DepoID");

                    b.HasIndex("IrsaliyeID");

                    b.HasIndex("UrunID");

                    b.ToTable("IrsaliyeDetaylari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.IrsaliyeTuru", b =>
                {
                    b.Property<int>("IrsaliyeTuruID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IrsaliyeTuruID"));

                    b.Property<string>("HareketTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IrsaliyeTuruAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IrsaliyeTuruID");

                    b.ToTable("IrsaliyeTurleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Kasa", b =>
                {
                    b.Property<Guid>("KasaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("AcilisBakiye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("GuncelBakiye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KasaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KasaTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SorumluKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KasaID");

                    b.ToTable("Kasalar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.KasaHareket", b =>
                {
                    b.Property<Guid>("KasaHareketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("CariID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DovizKuru")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HareketTuru")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("HedefBankaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HedefKasaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IslemTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("IslemYapanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KarsiParaBirimi")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid>("KasaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KaynakBankaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReferansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferansTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransferID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("KasaHareketID");

                    b.HasIndex("CariID");

                    b.HasIndex("HedefBankaID");

                    b.HasIndex("HedefKasaID");

                    b.HasIndex("KasaID");

                    b.HasIndex("KaynakBankaID");

                    b.ToTable("KasaHareketleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Controller")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("UstMenuID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuID");

                    b.HasIndex("UstMenuID");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.MenuRol", b =>
                {
                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RolId")
                        .HasColumnType("varchar(128)");

                    b.Property<Guid>("MenuRolID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("MenuRoller");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("RelatedEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.OdemeTuru", b =>
                {
                    b.Property<int>("OdemeTuruID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdemeTuruID"));

                    b.Property<string>("OdemeTuruAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OdemeTuruID");

                    b.ToTable("OdemeTurleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.KurDegeri", b =>
                {
                    b.Property<Guid>("KurDegeriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<decimal>("Alis")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("EfektifAlis")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("EfektifSatis")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ParaBirimiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Satis")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyenKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("VeriKaynagi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KurDegeriID");

                    b.HasIndex("ParaBirimiID");

                    b.ToTable("BirlesikModulKurDegerleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.ParaBirimi", b =>
                {
                    b.Property<Guid>("ParaBirimiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<bool>("AnaParaBirimiMi")
                        .HasColumnType("bit");

                    b.Property<string>("BinlikAyraci")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OlusturanKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OndalikAyraci")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("OndalikHassasiyet")
                        .HasColumnType("int");

                    b.Property<string>("Sembol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.Property<string>("SonGuncelleyenKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParaBirimiID");

                    b.ToTable("BirlesikModulParaBirimleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.ParaBirimiIliski", b =>
                {
                    b.Property<Guid>("ParaBirimiIliskiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HedefParaBirimiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KaynakParaBirimiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OlusturanKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyenKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParaBirimiIliskiID");

                    b.HasIndex("HedefParaBirimiID");

                    b.HasIndex("KaynakParaBirimiID");

                    b.ToTable("BirlesikModulParaBirimiIliskileri", t =>
                        {
                            t.HasCheckConstraint("CK_BirlesikModulDovizIliski_DifferentCurrencies", "KaynakParaBirimiID <> HedefParaBirimiID");
                        });
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.KurDegeri", b =>
                {
                    b.Property<Guid>("KurDegeriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<decimal>("Alis")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("DekontNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("EfektifAlis")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("EfektifSatis")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullaniciID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ParaBirimiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Satis")
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyenKullaniciID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("KurDegeriID");

                    b.HasIndex("ParaBirimiID");

                    b.ToTable("ParaBirimiModuluKurDegerleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.KurMarj", b =>
                {
                    b.Property<Guid>("KurMarjID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullaniciID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SatisMarji")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyenKullaniciID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Varsayilan")
                        .HasColumnType("bit");

                    b.HasKey("KurMarjID");

                    b.ToTable("KurMarjlari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimi", b =>
                {
                    b.Property<Guid>("ParaBirimiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("AnaParaBirimiMi")
                        .HasColumnType("bit");

                    b.Property<string>("BinlikAyraci")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OlusturanKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OndalikAyraci")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("OndalikHassasiyet")
                        .HasColumnType("int");

                    b.Property<string>("Sembol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.Property<string>("SonGuncelleyenKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParaBirimiID");

                    b.HasIndex("Kod")
                        .IsUnique()
                        .HasDatabaseName("IX_ParaBirimi_Kod");

                    b.ToTable("ParaBirimiModuluParaBirimleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimiIliski", b =>
                {
                    b.Property<Guid>("ParaBirimiIliskiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HedefParaBirimiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KaynakParaBirimiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OlusturanKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SonGuncelleyenKullaniciID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParaBirimiIliskiID");

                    b.HasIndex("HedefParaBirimiID");

                    b.HasIndex("KaynakParaBirimiID", "HedefParaBirimiID")
                        .IsUnique()
                        .HasDatabaseName("IX_DovizIliski_KaynakParaBirimiID_HedefParaBirimiID");

                    b.ToTable("ParaBirimiModuluParaBirimiIliskileri", t =>
                        {
                            t.HasCheckConstraint("CK_DovizIliski_DifferentCurrencies", "KaynakParaBirimiID <> HedefParaBirimiID");
                        });
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.SistemAyar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Anahtar")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Deger")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SistemAyarlari", (string)null);
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.SistemAyarlari", b =>
                {
                    b.Property<int>("SistemAyarlariID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SistemAyarlariID"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("AktifParaBirimleri")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AnaDovizKodu")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("DovizGuncellemeSikligi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OtomatikDovizGuncelleme")
                        .HasColumnType("bit");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SirketAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SirketAdresi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SirketEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SirketTelefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SirketVergiDairesi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SirketVergiNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SonDovizGuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("SistemAyarlariID");

                    b.ToTable("GenelSistemAyarlari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.SistemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Basarili")
                        .HasColumnType("bit");

                    b.Property<string>("HataMesaji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAdresi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IslemTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KayitAdi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("KayitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KullaniciGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KullaniciId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("LogID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LogTuruInt")
                        .HasColumnType("int");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sayfa")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TabloAdi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("SistemLoglar", (string)null);
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Sozlesme", b =>
                {
                    b.Property<Guid>("SozlesmeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AnaSozlesmeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CariID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ResmiFaturaKesildiMi")
                        .HasColumnType("bit");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SozlesmeDosyaYolu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SozlesmeDovizTuru")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SozlesmeNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("SozlesmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SozlesmeTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VekaletGeldiMi")
                        .HasColumnType("bit");

                    b.Property<string>("VekaletnameDosyaYolu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("SozlesmeID");

                    b.HasIndex("CariID");

                    b.ToTable("Sozlesmeler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokCikisDetay", b =>
                {
                    b.Property<Guid>("StokCikisDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("BirimFiyatTL")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("BirimFiyatUSD")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("BirimFiyatUZS")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("BirimMaliyet")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("CikisMiktari")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CikisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DovizKuru")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("HareketTipi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Iptal")
                        .HasColumnType("bit");

                    b.Property<string>("IptalAciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("IptalTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("ReferansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferansTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("StokFifoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ToplamMaliyet")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("ToplamMaliyetUSD")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("StokCikisDetayID");

                    b.HasIndex("StokFifoID");

                    b.ToTable("StokCikisDetaylari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokFifo", b =>
                {
                    b.Property<Guid>("StokFifoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BirimFiyatUSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BirimFiyatUZS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DovizKuru")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("GirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Iptal")
                        .HasColumnType("bit");

                    b.Property<decimal>("KalanMiktar")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("ReferansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferansTuru")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SonCikisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UrunID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StokFifoID");

                    b.HasIndex("GirisTarihi")
                        .HasDatabaseName("IX_StokFifo_GirisTarihi");

                    b.HasIndex("UrunID")
                        .HasDatabaseName("IX_StokFifo_UrunID");

                    b.HasIndex("ReferansID", "ReferansTuru")
                        .HasDatabaseName("IX_StokFifo_Referans");

                    b.HasIndex("UrunID", "KalanMiktar", "Aktif", "Silindi", "Iptal")
                        .HasDatabaseName("IX_StokFifo_StokSorgu");

                    b.ToTable("StokFifoKayitlari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokFifoCikis", b =>
                {
                    b.Property<Guid>("StokFifoCikisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<decimal>("BirimFiyatUSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BirimFiyatUZS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CikisMiktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CikisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DetayID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DovizKuru")
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("OlusturanKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferansTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StokFifoID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StokFifoCikisID");

                    b.HasIndex("StokFifoID");

                    b.ToTable("StokFifoCikislar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokHareket", b =>
                {
                    b.Property<Guid>("StokHareketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BirimFiyatUSD")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("BirimFiyatUZS")
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("DepoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FaturaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("HareketTuru")
                        .HasColumnType("int");

                    b.Property<Guid?>("IrsaliyeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IrsaliyeTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("IslemYapanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("ReferansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferansTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UrunID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StokHareketID");

                    b.HasIndex("DepoID");

                    b.HasIndex("UrunID");

                    b.ToTable("StokHareketleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.TodoComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TodoItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("TodoItemId");

                    b.ToTable("TodoComments");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedToUserId")
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent")
                        .HasColumnType("bit");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReminderAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TaskCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Urun", b =>
                {
                    b.Property<Guid>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("BirimID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DovizliListeFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DovizliMaliyetFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DovizliSatisFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KDVOrani")
                        .HasColumnType("int");

                    b.Property<Guid?>("KategoriID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("KritikStokSeviyesi")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UrunKodu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UrunID");

                    b.HasIndex("BirimID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.UrunFiyat", b =>
                {
                    b.Property<Guid>("FiyatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FiyatTipiID")
                        .HasColumnType("int");

                    b.Property<DateTime>("GecerliTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UrunID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FiyatID");

                    b.HasIndex("FiyatTipiID");

                    b.HasIndex("UrunID");

                    b.ToTable("UrunFiyatlari", (string)null);
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.UrunKategori", b =>
                {
                    b.Property<Guid>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OlusturanKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("SonGuncelleyenKullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KategoriID");

                    b.ToTable("UrunKategorileri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.BankaHareket", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Banka", "Banka")
                        .WithMany()
                        .HasForeignKey("BankaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Kasa", "HedefKasa")
                        .WithMany()
                        .HasForeignKey("HedefKasaID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Kasa", "KaynakKasa")
                        .WithMany()
                        .HasForeignKey("KaynakKasaID");

                    b.Navigation("Banka");

                    b.Navigation("Cari");

                    b.Navigation("HedefKasa");

                    b.Navigation("KaynakKasa");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.BankaHesap", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Banka", "Banka")
                        .WithMany("BankaHesaplari")
                        .HasForeignKey("BankaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Banka");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.BankaHesapHareket", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.BankaHesap", "BankaHesap")
                        .WithMany("BankaHesapHareketleri")
                        .HasForeignKey("BankaHesapID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Banka", "Banka")
                        .WithMany()
                        .HasForeignKey("BankaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.BankaHesap", "HedefBanka")
                        .WithMany()
                        .HasForeignKey("HedefBankaHesapID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Kasa", "HedefKasa")
                        .WithMany()
                        .HasForeignKey("HedefKasaID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Kasa", "KaynakKasa")
                        .WithMany()
                        .HasForeignKey("KaynakKasaID");

                    b.Navigation("Banka");

                    b.Navigation("BankaHesap");

                    b.Navigation("Cari");

                    b.Navigation("HedefBanka");

                    b.Navigation("HedefKasa");

                    b.Navigation("KaynakKasa");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Cari", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimi", "VarsayilanParaBirimi")
                        .WithMany()
                        .HasForeignKey("VarsayilanParaBirimiId");

                    b.Navigation("VarsayilanParaBirimi");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.CariHareket", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Cari", "Cari")
                        .WithMany("CariHareketler")
                        .HasForeignKey("CariID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Fatura", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Cari", "Cari")
                        .WithMany("Faturalar")
                        .HasForeignKey("CariID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.FaturaTuru", "FaturaTuru")
                        .WithMany("Faturalar")
                        .HasForeignKey("FaturaTuruID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.OdemeTuru", "OdemeTuru")
                        .WithMany("Faturalar")
                        .HasForeignKey("OdemeTuruID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Sozlesme", "Sozlesme")
                        .WithMany("Faturalar")
                        .HasForeignKey("SozlesmeID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cari");

                    b.Navigation("FaturaTuru");

                    b.Navigation("OdemeTuru");

                    b.Navigation("Sozlesme");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaAklamaKuyruk", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Fatura", null)
                        .WithMany("AklamaKayitlari")
                        .HasForeignKey("FaturaID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.FaturaDetay", "FaturaDetay")
                        .WithMany()
                        .HasForeignKey("FaturaKalemID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Sozlesme", "Sozlesme")
                        .WithMany("AklamaKayitlari")
                        .HasForeignKey("SozlesmeID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FaturaDetay");

                    b.Navigation("Sozlesme");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaDetay", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Birim", null)
                        .WithMany("FaturaDetaylari")
                        .HasForeignKey("BirimID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Fatura", "Fatura")
                        .WithMany("FaturaDetaylari")
                        .HasForeignKey("FaturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Urun", "Urun")
                        .WithMany("FaturaDetaylari")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaOdeme", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Fatura", "Fatura")
                        .WithMany("FaturaOdemeleri")
                        .HasForeignKey("FaturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Irsaliye", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Cari", "Cari")
                        .WithMany("Irsaliyeler")
                        .HasForeignKey("CariID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Fatura", "Fatura")
                        .WithMany("Irsaliyeler")
                        .HasForeignKey("FaturaID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.IrsaliyeTuru", null)
                        .WithMany("Irsaliyeler")
                        .HasForeignKey("IrsaliyeTuruID");

                    b.Navigation("Cari");

                    b.Navigation("Depo");

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.IrsaliyeDetay", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Birim", null)
                        .WithMany("IrsaliyeDetaylari")
                        .HasForeignKey("BirimID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Irsaliye", "Irsaliye")
                        .WithMany("IrsaliyeDetaylari")
                        .HasForeignKey("IrsaliyeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depo");

                    b.Navigation("Irsaliye");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.KasaHareket", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.BankaHesap", "HedefBanka")
                        .WithMany()
                        .HasForeignKey("HedefBankaID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Kasa", "HedefKasa")
                        .WithMany()
                        .HasForeignKey("HedefKasaID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Kasa", "Kasa")
                        .WithMany("KasaHareketleri")
                        .HasForeignKey("KasaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.BankaHesap", "KaynakBanka")
                        .WithMany()
                        .HasForeignKey("KaynakBankaID");

                    b.Navigation("Cari");

                    b.Navigation("HedefBanka");

                    b.Navigation("HedefKasa");

                    b.Navigation("Kasa");

                    b.Navigation("KaynakBanka");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Menu", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Menu", "UstMenu")
                        .WithMany("AltMenuler")
                        .HasForeignKey("UstMenuID");

                    b.Navigation("UstMenu");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.MenuRol", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Menu", "Menu")
                        .WithMany("MenuRoller")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Notification", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.KurDegeri", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.ParaBirimi", "ParaBirimi")
                        .WithMany("KurDegerleri")
                        .HasForeignKey("ParaBirimiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParaBirimi");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.ParaBirimiIliski", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.ParaBirimi", "HedefParaBirimi")
                        .WithMany("HedefParaBirimiIliskileri")
                        .HasForeignKey("HedefParaBirimiID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.ParaBirimi", "KaynakParaBirimi")
                        .WithMany("KaynakParaBirimiIliskileri")
                        .HasForeignKey("KaynakParaBirimiID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HedefParaBirimi");

                    b.Navigation("KaynakParaBirimi");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.KurDegeri", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimi", "ParaBirimi")
                        .WithMany("KurDegerleri")
                        .HasForeignKey("ParaBirimiID")
                        .IsRequired();

                    b.Navigation("ParaBirimi");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimiIliski", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimi", "HedefParaBirimi")
                        .WithMany("HedefParaBirimiIliskileri")
                        .HasForeignKey("HedefParaBirimiID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimi", "KaynakParaBirimi")
                        .WithMany("KaynakParaBirimiIliskileri")
                        .HasForeignKey("KaynakParaBirimiID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HedefParaBirimi");

                    b.Navigation("KaynakParaBirimi");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.SistemLog", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", "Kullanici")
                        .WithMany("SistemLoglar")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Sozlesme", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Cari", "Cari")
                        .WithMany("Sozlesmeler")
                        .HasForeignKey("CariID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokCikisDetay", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.StokFifo", "StokFifo")
                        .WithMany("StokCikisDetaylari")
                        .HasForeignKey("StokFifoID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("StokFifo");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokFifo", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokFifoCikis", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.StokFifo", "StokFifo")
                        .WithMany()
                        .HasForeignKey("StokFifoID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("StokFifo");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokHareket", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Depo", "Depo")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("DepoID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Urun", "Urun")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depo");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.TodoComment", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", "AppUser")
                        .WithMany("TodoComments")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.TodoItem", "TodoItem")
                        .WithMany("TodoComments")
                        .HasForeignKey("TodoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("TodoItem");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.TodoItem", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.ApplicationUser", "AssignedToUser")
                        .WithMany("AssignedTodos")
                        .HasForeignKey("AssignedToUserId");

                    b.Navigation("AssignedToUser");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Urun", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Birim", "Birim")
                        .WithMany("Urunler")
                        .HasForeignKey("BirimID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.UrunKategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriID");

                    b.Navigation("Birim");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.UrunFiyat", b =>
                {
                    b.HasOne("MuhasebeStokWebApp.Data.Entities.FiyatTipi", "FiyatTipi")
                        .WithMany("UrunFiyatlari")
                        .HasForeignKey("FiyatTipiID");

                    b.HasOne("MuhasebeStokWebApp.Data.Entities.Urun", "Urun")
                        .WithMany("UrunFiyatlari")
                        .HasForeignKey("UrunID");

                    b.Navigation("FiyatTipi");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ApplicationUser", b =>
                {
                    b.Navigation("AssignedTodos");

                    b.Navigation("SistemLoglar");

                    b.Navigation("TodoComments");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Banka", b =>
                {
                    b.Navigation("BankaHesaplari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.BankaHesap", b =>
                {
                    b.Navigation("BankaHesapHareketleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Birim", b =>
                {
                    b.Navigation("FaturaDetaylari");

                    b.Navigation("IrsaliyeDetaylari");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Cari", b =>
                {
                    b.Navigation("CariHareketler");

                    b.Navigation("Faturalar");

                    b.Navigation("Irsaliyeler");

                    b.Navigation("Sozlesmeler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Depo", b =>
                {
                    b.Navigation("StokHareketleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Fatura", b =>
                {
                    b.Navigation("AklamaKayitlari");

                    b.Navigation("FaturaDetaylari");

                    b.Navigation("FaturaOdemeleri");

                    b.Navigation("Irsaliyeler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FaturaTuru", b =>
                {
                    b.Navigation("Faturalar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.FiyatTipi", b =>
                {
                    b.Navigation("UrunFiyatlari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Irsaliye", b =>
                {
                    b.Navigation("IrsaliyeDetaylari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.IrsaliyeTuru", b =>
                {
                    b.Navigation("Irsaliyeler");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Kasa", b =>
                {
                    b.Navigation("KasaHareketleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Menu", b =>
                {
                    b.Navigation("AltMenuler");

                    b.Navigation("MenuRoller");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.OdemeTuru", b =>
                {
                    b.Navigation("Faturalar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiBirlesikModul.ParaBirimi", b =>
                {
                    b.Navigation("HedefParaBirimiIliskileri");

                    b.Navigation("KaynakParaBirimiIliskileri");

                    b.Navigation("KurDegerleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.ParaBirimiModulu.ParaBirimi", b =>
                {
                    b.Navigation("HedefParaBirimiIliskileri");

                    b.Navigation("KaynakParaBirimiIliskileri");

                    b.Navigation("KurDegerleri");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Sozlesme", b =>
                {
                    b.Navigation("AklamaKayitlari");

                    b.Navigation("Faturalar");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.StokFifo", b =>
                {
                    b.Navigation("StokCikisDetaylari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.TodoItem", b =>
                {
                    b.Navigation("TodoComments");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.Urun", b =>
                {
                    b.Navigation("FaturaDetaylari");

                    b.Navigation("StokHareketleri");

                    b.Navigation("UrunFiyatlari");
                });

            modelBuilder.Entity("MuhasebeStokWebApp.Data.Entities.UrunKategori", b =>
                {
                    b.Navigation("Urunler");
                });
#pragma warning restore 612, 618
        }
    }
}
