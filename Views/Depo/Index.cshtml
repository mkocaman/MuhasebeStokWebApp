@model MuhasebeStokWebApp.ViewModels.Depo.DepoListViewModel
@{
    ViewData["Title"] = "Depolar";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isAdmin = User.IsInRole("Admin");
}

<div class="container-fluid">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="mb-0">Depo Listesi</h4>
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createDepoModal">
                    <i class="fas fa-plus"></i> Yeni Depo Ekle
                </button>
            </div>
        </div>
        <div class="card-body">
            <div id="alertContainer">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
            </div>
            
            <!-- Sekme Başlıkları -->
            <ul class="nav nav-tabs mb-3" id="depoTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link @(ViewBag.AktifTab == "aktif" ? "active" : "")" id="aktif-tab" href="@Url.Action("Index", new { tab = "aktif" })" role="tab" aria-controls="aktif" aria-selected="@(ViewBag.AktifTab == "aktif" ? "true" : "false")">
                        <i class="fas fa-check-circle text-success"></i> Aktif Depolar
                    </a>
                </li>
                @if (isAdmin)
                {
                <li class="nav-item" role="presentation">
                        <a class="nav-link @(ViewBag.AktifTab == "pasif" ? "active" : "")" id="pasif-tab" href="@Url.Action("Index", new { tab = "pasif" })" role="tab" aria-controls="pasif" aria-selected="@(ViewBag.AktifTab == "pasif" ? "true" : "false")">
                        <i class="fas fa-times-circle text-danger"></i> Pasif Depolar
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link @(ViewBag.AktifTab == "silindi" ? "active" : "")" id="silindi-tab" href="@Url.Action("Index", new { tab = "silindi" })" role="tab" aria-controls="silindi" aria-selected="@(ViewBag.AktifTab == "silindi" ? "true" : "false")">
                            <i class="fas fa-trash text-danger"></i> Silinmiş Depolar
                        </a>
                </li>
                }
            </ul>
            
            <!-- Sekme İçerikleri -->
            <div class="tab-content" id="depoTabsContent">
                <!-- Aktif Depolar Sekmesi -->
                <div class="tab-pane fade @(ViewBag.AktifTab == "aktif" ? "show active" : "")" id="aktif" role="tabpanel" aria-labelledby="aktif-tab">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover" id="aktifDepoTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Depo Adı</th>
                                    <th>Adres</th>
                                    <th>Oluşturma Tarihi</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Depolar.Where(d => d.Aktif && !d.Silindi))
                                {
                                    <tr>
                                        <td>@item.DepoAdi</td>
                                        <td>@item.Adres</td>
                                        <td>@item.OlusturmaTarihi.ToString("dd.MM.yyyy")</td>
                                        <td class="text-center">
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-sm btn-info btn-edit-depo" data-id="@item.DepoID">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-primary btn-details-depo" data-id="@item.DepoID">
                                                    <i class="fas fa-info-circle"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-danger btn-delete-depo" data-id="@item.DepoID" data-name="@item.DepoAdi">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <!-- Pasif Depolar Sekmesi -->
                @if (isAdmin)
                {
                <div class="tab-pane fade @(ViewBag.AktifTab == "pasif" ? "show active" : "")" id="pasif" role="tabpanel" aria-labelledby="pasif-tab">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover" id="pasifDepoTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Depo Adı</th>
                                    <th>Adres</th>
                                    <th>Oluşturma Tarihi</th>
                                    <th>Durum</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                    @foreach (var item in Model.Depolar.Where(d => !d.Aktif && !d.Silindi))
                                {
                                    <tr>
                                        <td>@item.DepoAdi</td>
                                        <td>@item.Adres</td>
                                        <td>@item.OlusturmaTarihi.ToString("dd.MM.yyyy")</td>
                                        <td>
                                            <span class="badge bg-warning">Pasif</span>
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-sm btn-primary btn-details-depo" data-id="@item.DepoID">
                                                    <i class="fas fa-info-circle"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-success btn-toggle-active-depo" data-id="@item.DepoID" data-name="@item.DepoAdi">
                                                    <i class="fas fa-check-circle"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                    
                    <!-- Silinmiş Depolar Sekmesi -->
                    <div class="tab-pane fade @(ViewBag.AktifTab == "silindi" ? "show active" : "")" id="silindi" role="tabpanel" aria-labelledby="silindi-tab">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover" id="silinmisDepoTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Depo Adı</th>
                                        <th>Konum</th>
                                        <th>Açıklama</th>
                                        <th>Durum</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Depolar.Where(d => d.Silindi))
                                    {
                                        <tr>
                                            <td>@item.DepoAdi</td>
                                            <td>@item.Adres</td>
                                            <td>@item.Aciklama</td>
                                            <td>
                                                <span class="badge bg-danger">Silinmiş</span>
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-sm btn-success btn-restore-depo" data-id="@item.DepoID">
                                                        <i class="fas fa-undo"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Yeni Depo Ekleme Modal -->
<div class="modal fade" id="createDepoModal" tabindex="-1" aria-labelledby="createDepoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="createDepoModalLabel">Yeni Depo Ekle</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="createDepoModalContent">
                <!-- Partial view içeriği buraya yüklenecek -->
                <div class="modal-body text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Depo Düzenleme Modal -->
<div class="modal fade" id="editDepoModal" tabindex="-1" aria-labelledby="editDepoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="editDepoModalLabel">Depo Düzenle</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="editDepoModalContent">
                <!-- İçerik AJAX ile yüklenecek -->
            </div>
        </div>
    </div>
</div>

<!-- Depo Detay Modal -->
<div class="modal fade" id="detailsDepoModal" tabindex="-1" aria-labelledby="detailsDepoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="detailsDepoModalContent">
                <!-- İçerik AJAX ile yüklenecek -->
                <div class="modal-body text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Depo Silme Onay Modal -->
<div class="modal fade" id="deleteDepoModal" tabindex="-1" aria-labelledby="deleteDepoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteDepoModalLabel">Depo Silme Onayı</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="deleteDepoMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteDepo">Sil</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // DataTable uyarılarını gizle
            $.fn.dataTable.ext.errMode = 'none';
            
            // Aktif Depolar DataTable başlatma
            try {
                $('#aktifDepoTable').DataTable({
                    language: {
                        url: '/js/dataTables.turkish.json'
                    },
                    responsive: true,
                    retrieve: true
                });
            
            // Pasif Depolar DataTable başlatma
                $('#pasifDepoTable').DataTable({
                    language: {
                        url: '/js/dataTables.turkish.json'
                    },
                    responsive: true,
                    retrieve: true
                });
                
                // Silinmiş Depolar DataTable başlatma
                $('#silinmisDepoTable').DataTable({
                    language: {
                        url: '/js/dataTables.turkish.json'
                    },
                    responsive: true,
                    retrieve: true
                });
            } catch (e) {
                console.error("DataTable başlatma hatası:", e);
            }
            
            // Otomatik kapanan alertler
            window.setTimeout(function() {
                $(".alert").fadeTo(500, 0).slideUp(500, function() {
                    $(this).remove();
                });
            }, 4000);
            
            // Yeni Depo Modal açıldığında
            $('#createDepoModal').on('show.bs.modal', function (e) {
                $.ajax({
                    url: '@Url.Action("Create", "Depo")',
                    type: 'GET',
                    success: function(result) {
                        $('#createDepoModalContent').html(result);
                    },
                    error: function() {
                        alert('Form yüklenirken bir hata oluştu.');
                        $('#createDepoModal').modal('hide');
                    }
                });
            });
            
            // Modal kapatıldığında içeriği temizle (prevent caching issues)
            $('#createDepoModal').on('hidden.bs.modal', function (e) {
                $('#createDepoModalContent').html('<div class="modal-body text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Yükleniyor...</span></div></div>');
            });
            
            // Depo düzenleme modal
            $(document).on('click', '.btn-edit-depo', function () {
                var depoId = $(this).data('id');
                $('#editDepoModalContent').html('<div class="text-center my-3"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Yükleniyor...</span></div></div>');
                $('#editDepoModal').modal('show');
                
                $.ajax({
                    url: '@Url.Action("Edit", "Depo")/' + depoId,
                    type: 'GET',
                    success: function (data) {
                        $('#editDepoModalContent').html(data);
                        
                        // Düzenleme formunu AJAX ile gönder
                        $('#editDepoModalContent form').on('submit', function(e) {
                            e.preventDefault();
                            
                            $.ajax({
                                url: $(this).attr('action'),
                                type: 'POST',
                                data: $(this).serialize(),
                                success: function(response) {
                                    if (response.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Başarılı!',
                                            text: response.message,
                                            confirmButtonText: 'Tamam'
                                        }).then(() => {
                                            $('#editDepoModal').modal('hide');
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Hata!',
                                            text: response.message,
                                            confirmButtonText: 'Tamam'
                                        });
                                    }
                                },
                                error: function() {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Hata!',
                                        text: 'İşlem sırasında bir hata oluştu.',
                                        confirmButtonText: 'Tamam'
                                    });
                                }
                            });
                        });
                    },
                    error: function () {
                        $('#editDepoModalContent').html('<div class="alert alert-danger">Depo bilgileri yüklenirken bir hata oluştu.</div>');
                    }
                });
            });
            
            // Depo detay açma
            $(document).on('click', '.btn-details-depo', function() {
                var depoID = $(this).data('id');
                
                // Modal içeriğini yükle
                $.ajax({
                    url: '@Url.Action("Details", "Depo")/' + depoID,
                    type: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function(data) {
                        $('#detailsDepoModalContent').html(data);
                        $('#detailsDepoModal').modal('show');
                    },
                    error: function(xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Depo bilgileri yüklenirken bir hata oluştu.',
                            confirmButtonText: 'Tamam'
                        });
                    }
                });
            });
            
            // Depo silme onay modalı
            $(document).on('click', '.btn-delete-depo', function() {
                var depoId = $(this).data('id');
                var depoName = $(this).data('name');
                
                $('#deleteDepoMessage').text(`"${depoName}" deposunu silmek istediğinize emin misiniz? Bu işlem geri alınamaz.`);
                $('#confirmDeleteDepo').data('id', depoId);
                $('#deleteDepoModal').modal('show');
            });
            
            // Depo silme işlemi
            $('#confirmDeleteDepo').on('click', function() {
                var depoId = $(this).data('id');
                
                $.ajax({
                    url: '@Url.Action("DeleteDepo", "Depo")',
                    type: 'POST',
                    data: { id: depoId },
                    success: function(response) {
                        $('#deleteDepoModal').modal('hide');
                        
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Başarılı!',
                                text: response.message,
                                confirmButtonText: 'Tamam'
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: response.message || 'İşlem sırasında bir hata oluştu.',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    },
                    error: function() {
                        $('#deleteDepoModal').modal('hide');
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'İşlem sırasında bir hata oluştu.',
                            confirmButtonText: 'Tamam'
                        });
                    }
                });
            });
            
            // Depo geri getirme işlemi
            $(document).on('click', '.btn-restore-depo', function () {
                var id = $(this).data('id');
                var name = $(this).data('name');

                Swal.fire({
                    title: name + ' Geri Yüklenecek',
                    text: "Bu depo geri yüklenecek. Emin misiniz?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Evet, Geri Yükle",
                    cancelButtonText: "İptal"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("RestoreDepo", "Depo")",
                            data: { id: id },
                            success: function (data) {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Başarılı',
                                        text: data.message,
                                        confirmButtonText: 'Tamam'
                                    }).then((value) => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Hata',
                                        text: data.message,
                                        confirmButtonText: 'Tamam'
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Hata',
                                    text: 'Bir hata oluştu!',
                                    confirmButtonText: 'Tamam'
                                });
                            }
                        });
                    }
                });
            });

            // Depo Toggle Active
            $(document).on('click', '.btn-toggle-active-depo', function () {
                var id = $(this).data('id');
                var name = $(this).data('name');

                Swal.fire({
                    title: name + ' Aktifleştirilecek',
                    text: "Bu depo aktif duruma getirilecek. Emin misiniz?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Evet, Aktifleştir",
                    cancelButtonText: "İptal"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("ToggleActive", "Depo")",
                            data: { id: id },
                            success: function (data) {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Başarılı',
                                        text: data.message,
                                        confirmButtonText: 'Tamam'
                                    }).then((value) => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Hata',
                                        text: data.message,
                                        confirmButtonText: 'Tamam'
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Hata',
                                    text: 'Bir hata oluştu!',
                                    confirmButtonText: 'Tamam'
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
} 