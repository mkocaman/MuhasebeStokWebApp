@model MuhasebeStokWebApp.ViewModels.Fatura.FaturaCreateViewModel
@{
    ViewData["Title"] = "Yeni Fatura";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Tablo hücrelerinin alt alta gelmesini önlemek için */
    #kalemlerTable tr {
        display: table-row !important;
    }
    
    #kalemlerTable td, #kalemlerTable th {
        display: table-cell !important;
        vertical-align: middle !important;
    }
    
    /* Select2 dropdown'ın tablo içinde düzgün görünmesi için */
    .select2-container {
        width: 100% !important;
    }
    
    /* Mobil görünümde yatay kaydırma */
    .table-responsive {
        overflow-x: auto;
    }
    
    /* Tablo hücrelerinin genişliğini korumak için */
    #kalemlerTable th, #kalemlerTable td {
        white-space: nowrap;
    }
</style>

<div class="container-fluid">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="mb-0">Yeni Fatura Oluştur</h4>
                <a asp-action="Index" class="btn btn-light">
                    <i class="fas fa-arrow-left"></i> Listeye Dön
                </a>
            </div>
        </div>
        <div class="card-body">
            <form asp-action="Create" id="faturaForm" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                <!-- Fatura Üst Bilgileri -->
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group mb-3">
                            <label asp-for="FaturaNumarasi" class="control-label"></label>
                            <input asp-for="FaturaNumarasi" class="form-control" />
                            <span asp-validation-for="FaturaNumarasi" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group mb-3">
                            <label asp-for="SiparisNumarasi" class="control-label"></label>
                            <input asp-for="SiparisNumarasi" class="form-control" />
                            <span asp-validation-for="SiparisNumarasi" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group mb-3">
                            <label asp-for="FaturaTarihi" class="control-label"></label>
                            <input asp-for="FaturaTarihi" class="form-control" type="date" />
                            <span asp-validation-for="FaturaTarihi" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="VadeTarihi" class="control-label"></label>
                            <input asp-for="VadeTarihi" class="form-control" type="date" />
                            <span asp-validation-for="VadeTarihi" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="CariID" class="control-label"></label>
                            <select asp-for="CariID" class="form-control select2" asp-items="ViewBag.Cariler">
                                <option value="">-- Cari Seçiniz --</option>
                            </select>
                            <span asp-validation-for="CariID" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="FaturaTuru" class="control-label"></label>
                            <select asp-for="FaturaTuru" class="form-control select2" asp-items="ViewBag.FaturaTurleri">
                                <option value="">-- Fatura Türü Seçiniz --</option>
                            </select>
                            <span asp-validation-for="FaturaTuru" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Aciklama" class="control-label"></label>
                            <textarea asp-for="Aciklama" class="form-control"></textarea>
                            <span asp-validation-for="Aciklama" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="DovizTuru" class="control-label"></label>
                            <select asp-for="DovizTuru" class="form-control">
                                <option value="TRY">TRY - Türk Lirası</option>
                                <option value="USD">USD - Amerikan Doları</option>
                                <option value="EUR">EUR - Euro</option>
                                <option value="GBP">GBP - İngiliz Sterlini</option>
                            </select>
                            <span asp-validation-for="DovizTuru" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="DovizKuru" class="control-label"></label>
                            <input asp-for="DovizKuru" class="form-control" type="number" step="0.0001" min="0.0001" />
                            <span asp-validation-for="DovizKuru" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Resmi" /> @Html.DisplayNameFor(model => model.Resmi)
                    </label>
                </div>
                
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="OtomatikIrsaliyeOlustur" /> @Html.DisplayNameFor(model => model.OtomatikIrsaliyeOlustur)
                    </label>
                </div>
            
                <!-- Fatura Kalemleri -->
                <div class="card mt-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Fatura Kalemleri</h5>
                        <button type="button" class="btn btn-primary btn-sm" id="btnAddKalem">
                            <i class="fa fa-plus"></i> Kalem Ekle
                        </button>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped" id="kalemlerTable">
                                <thead class="bg-primary text-white">
                                    <tr>
                                        <th>Ürün</th>
                                        <th style="width: 100px;">Miktar</th>
                                        <th style="width: 100px;">Birim</th>
                                        <th style="width: 120px;">Birim Fiyat</th>
                                        <th style="width: 80px;">KDV %</th>
                                        <th style="width: 80px;">İndirim %</th>
                                        <th style="width: 120px;">Tutar</th>
                                        <th style="width: 120px;">KDV Tutarı</th>
                                        <th style="width: 120px;">Net Tutar</th>
                                        <th style="width: 80px;">İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody id="kalemlerBody">
                                    <!-- Kalemler JavaScript ile eklenecek -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Fatura Toplamları -->
                <div class="row mt-4">
                    <div class="col-md-6 offset-md-6">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <tbody>
                                    <tr>
                                        <th style="width: 200px;">Ara Toplam</th>
                                        <td class="text-right">
                                            <input id="AraToplam" class="form-control text-right" readonly />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>KDV Tutarı</th>
                                        <td class="text-right">
                                            <input id="KdvTutari" class="form-control text-right" readonly />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>İndirim Tutarı</th>
                                        <td class="text-right">
                                            <input id="toplamIndirimTutari" class="form-control text-right" readonly />
                                        </td>
                                    </tr>
                                    <tr class="table-primary">
                                        <th>Genel Toplam</th>
                                        <td class="text-right">
                                            <input id="GenelToplam" class="form-control text-right font-weight-bold" readonly />
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="form-group mt-4 text-right">
                    <a asp-action="Index" class="btn btn-secondary">İptal</a>
                    <button type="submit" class="btn btn-primary">Kaydet</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Kalem Template (Gizli) -->
<script type="text/template" id="kalemTemplate">
    <tr class="kalem-row">
        <td>
            <select name="FaturaKalemleri[{index}].UrunID" class="form-control urun-select" required>
                <option value="">-- Ürün Seçiniz --</option>
                @foreach (var item in ViewBag.Urunler)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
            <input type="hidden" name="FaturaKalemleri[{index}].UrunAdi" class="urun-adi" />
        </td>
        <td>
            <input type="number" name="FaturaKalemleri[{index}].Miktar" class="form-control miktar" value="1" min="0.01" step="0.01" required />
        </td>
        <td>
            <input type="text" name="FaturaKalemleri[{index}].Birim" class="form-control birim" readonly />
        </td>
        <td>
            <input type="number" name="FaturaKalemleri[{index}].BirimFiyat" class="form-control birim-fiyat" value="0" min="0.01" step="0.01" required />
        </td>
        <td>
            <input type="number" name="FaturaKalemleri[{index}].KdvOrani" class="form-control kdv-orani" value="18" min="0" max="100" />
        </td>
        <td>
            <input type="number" name="FaturaKalemleri[{index}].IndirimOrani" class="form-control indirim-orani" value="0" min="0" max="100" />
        </td>
        <td>
            <input type="number" name="FaturaKalemleri[{index}].Tutar" class="form-control tutar" value="0" readonly />
        </td>
        <td>
            <input type="number" name="FaturaKalemleri[{index}].KdvTutari" class="form-control kdv-tutari" value="0" readonly />
        </td>
        <td>
            <input type="number" name="FaturaKalemleri[{index}].NetTutar" class="form-control net-tutar" value="0" readonly />
        </td>
        <td class="text-center">
            <button type="button" class="btn btn-danger btn-sm btn-remove-kalem">
                <i class="fa fa-trash"></i>
            </button>
            <input type="hidden" name="FaturaKalemleri.Index" value="{index}" />
        </td>
    </tr>
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <!-- Select2 kütüphanesi -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    
    <script>
        $(document).ready(function () {
            var kalemIndex = 0;
            
            // Fatura numarası otomatik oluşturma
            if (!$("#FaturaNumarasi").val()) {
                $.ajax({
                    url: "/Fatura/GetNewFaturaNumber",
                    type: "GET",
                    success: function(data) {
                        $("#FaturaNumarasi").val(data);
                    },
                    error: function() {
                        console.error("Fatura numarası alınamadı");
                    }
                });
            }
            
            // Sipariş numarası otomatik oluşturma
            if (!$("#SiparisNumarasi").val()) {
                $.ajax({
                    url: "/Fatura/GetNewSiparisNumarasi",
                    type: "GET",
                    success: function(data) {
                        $("#SiparisNumarasi").val(data);
                    },
                    error: function() {
                        console.error("Sipariş numarası alınamadı");
                    }
                });
            }
            
            // Select2 entegrasyonu
            try {
                $('.select2').select2();
            } catch (e) {
                console.error("Select2 yüklenemedi:", e);
            }

            // Kalem Ekle
            $("#btnAddKalem").click(function () {
                addKalemRow();
            });

            // İlk kalem satırını ekle
            addKalemRow();

            // Kalem satırı ekleme fonksiyonu
            function addKalemRow() {
                try {
                    console.log("Kalem satırı ekleniyor...");
                    
                    var template = $("#kalemTemplate").html();
                    template = template.replace(/{index}/g, kalemIndex);
                    $("#kalemlerBody").append(template);
                    
                    // Yeni eklenen satırın olaylarını bağla
                    bindEventsToRow($(".kalem-row").last());
                    
                    kalemIndex++;
                    
                    console.log("Kalem satırı eklendi, index:", kalemIndex-1);
                } catch (e) {
                    console.error("Kalem satırı eklenirken hata:", e);
                }
            }

            // Satıra olayları bağlama
            function bindEventsToRow(row) {
                try {
                    console.log("Satıra olaylar bağlanıyor...");
                    
                    // Select2 entegrasyonu
                    try {
                        row.find('.urun-select').select2({
                            dropdownParent: $('#faturaForm')
                        });
                    } catch (e) {
                        console.error("Select2 bağlanamadı:", e);
                    }
                    
                    // Ürün seçildiğinde
                    row.find(".urun-select").change(function () {
                        var urunID = $(this).val();
                        var currentRow = $(this).closest("tr");
                        
                        console.log("Ürün seçildi, ID:", urunID);
                        
                        if (urunID) {
                            // AJAX ile ürün bilgilerini getir
                            $.ajax({
                                url: "/Fatura/GetUrunBilgileri?id=" + urunID,
                                type: "GET",
                                success: function (data) {
                                    console.log("Ürün bilgileri alındı:", data);
                                    
                                    currentRow.find(".urun-adi").val(data.urunAdi);
                                    currentRow.find(".birim").val(data.birim);
                                    currentRow.find(".birim-fiyat").val(data.birimFiyat);
                                    
                                    // Tutarları hesapla
                                    calculateRowTotals(currentRow);
                                },
                                error: function(xhr, status, error) {
                                    console.error("Ürün bilgileri alınamadı:", status, error);
                                    console.log("XHR:", xhr.responseText);
                                    
                                    // Hata durumunda varsayılan değerler
                                    currentRow.find(".urun-adi").val("");
                                    currentRow.find(".birim").val("Adet");
                                    currentRow.find(".birim-fiyat").val(0);
                                    
                                    // Tutarları hesapla
                                    calculateRowTotals(currentRow);
                                }
                            });
                        } else {
                            currentRow.find(".urun-adi").val("");
                            currentRow.find(".birim").val("");
                            currentRow.find(".birim-fiyat").val(0);
                            
                            // Tutarları hesapla
                            calculateRowTotals(currentRow);
                        }
                    });

                    // Miktar, birim fiyat, KDV oranı veya indirim oranı değiştiğinde
                    row.find(".miktar, .birim-fiyat, .kdv-orani, .indirim-orani").on('input', function () {
                        console.log("Değer değişti:", $(this).attr('class'), $(this).val());
                        calculateRowTotals($(this).closest("tr"));
                    });

                    // Kalem silme
                    row.find(".btn-remove-kalem").click(function () {
                        if ($("#kalemlerBody tr").length > 1) {
                            $(this).closest("tr").remove();
                            calculateFaturaTotals();
                        } else {
                            alert("En az bir kalem olmalıdır!");
                        }
                    });
                    
                    console.log("Satıra olaylar başarıyla bağlandı");
                } catch (e) {
                    console.error("Satıra olaylar bağlanırken hata:", e);
                }
            }

            // Satır toplamlarını hesaplama
            function calculateRowTotals(row) {
                try {
                    console.log("Satır toplamları hesaplanıyor...");
                    
                    // Değerleri al ve sayıya çevir
                    var miktar = parseFloat(row.find(".miktar").val()) || 0;
                    var birimFiyat = parseFloat(row.find(".birim-fiyat").val()) || 0;
                    var kdvOrani = parseFloat(row.find(".kdv-orani").val()) || 0;
                    var indirimOrani = parseFloat(row.find(".indirim-orani").val()) || 0;
                    
                    console.log("Değerler:", {miktar, birimFiyat, kdvOrani, indirimOrani});
                    
                    // Hesaplamalar
                    var tutar = miktar * birimFiyat;
                    var indirimTutari = tutar * (indirimOrani / 100);
                    var netTutar = tutar - indirimTutari;
                    var kdvTutari = netTutar * (kdvOrani / 100);
                    var toplamTutar = netTutar + kdvTutari;
                    
                    console.log("Hesaplanan değerler:", {tutar, indirimTutari, netTutar, kdvTutari, toplamTutar});
                    
                    // Değerleri forma yaz
                    row.find(".tutar").val(tutar.toFixed(2));
                    row.find(".kdv-tutari").val(kdvTutari.toFixed(2));
                    row.find(".net-tutar").val(toplamTutar.toFixed(2));
                    
                    // Fatura toplamlarını güncelle
                    calculateFaturaTotals();
                    
                    return true; // Başarılı hesaplama
                } catch (e) {
                    console.error("Satır toplamları hesaplanırken hata:", e);
                    return false; // Hata durumu
                }
            }

            // Fatura toplamlarını hesaplama
            function calculateFaturaTotals() {
                try {
                    console.log("Fatura toplamları hesaplanıyor...");
                    
                    var araToplam = 0;
                    var kdvToplam = 0;
                    var indirimToplam = 0;
                    var genelToplam = 0;
                    
                    // Tüm satırları dolaş
                    $(".kalem-row").each(function () {
                        var row = $(this);
                        var tutar = parseFloat(row.find(".tutar").val()) || 0;
                        var kdvTutari = parseFloat(row.find(".kdv-tutari").val()) || 0;
                        var indirimOrani = parseFloat(row.find(".indirim-orani").val()) || 0;
                        var indirimTutari = tutar * (indirimOrani / 100);
                        
                        araToplam += tutar;
                        kdvToplam += kdvTutari;
                        indirimToplam += indirimTutari;
                        genelToplam += parseFloat(row.find(".net-tutar").val()) || 0;
                        
                        console.log("Satır değerleri:", {tutar, kdvTutari, indirimOrani, indirimTutari});
                    });
                    
                    console.log("Hesaplanan toplamlar:", {araToplam, kdvToplam, indirimToplam, genelToplam});
                    
                    // Toplamları forma yaz
                    $("#AraToplam").val(araToplam.toFixed(2));
                    $("#KdvTutari").val(kdvToplam.toFixed(2));
                    $("#IndirimTutari").val(indirimToplam.toFixed(2));
                    $("#GenelToplam").val(genelToplam.toFixed(2));
                    
                    return true; // Başarılı hesaplama
                } catch (e) {
                    console.error("Fatura toplamları hesaplanırken hata:", e);
                    return false; // Hata durumu
                }
            }

            // Form gönderilmeden önce kontrol
            $("#faturaForm").submit(function (e) {
                if ($("#kalemlerBody tr").length === 0) {
                    e.preventDefault();
                    alert("En az bir fatura kalemi eklemelisiniz!");
                    return false;
                }
                
                // Tüm satırları dolaş ve değerleri güncelle
                $(".kalem-row").each(function(index) {
                    var row = $(this);
                    
                    // Index değerini güncelle
                    row.find("select, input").each(function() {
                        var name = $(this).attr("name");
                        if (name && name.includes("[") && name.includes("]")) {
                            var newName = name.replace(/\[\d+\]/, "[" + index + "]");
                            $(this).attr("name", newName);
                        }
                    });
                    
                    // Index değerini hidden input ile güncelle
                    row.find("input[name='FaturaKalemleri.Index']").val(index);
                    
                    // Hesaplamaları son kez yap
                    calculateRowTotals(row);
                });
                
                // Fatura toplamlarını son kez hesapla
                calculateFaturaTotals();
                
                console.log("Form gönderiliyor...");
                return true;
            });
        });
    </script>
} 