@model dynamic
@{
    ViewData["Title"] = "Anasayfa";
    ViewData["ActiveMenu"] = "Anasayfa";
    string paraBirimi = ViewBag.ParaBirimi ?? "TL"; // Varsayılan para birimi
}

@using System.Security.Claims;

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        <strong>Hata!</strong> @ViewBag.ErrorMessage
    </div>
}

<!-- Container-fluid başlangıç -->
<div class="container-fluid dashboard-default-sec">
    <div class="row">
        <div class="col-xl-5 box-col-12 des-xl-100">
            <div class="row">
                <div class="col-xl-12 col-md-6 box-col-6 des-xl-50">
                    <div class="card profile-greeting">
                        <div class="card-header">
                            <div class="header-top">
                                <div class="setting-list">
                                    <ul class="list-unstyled setting-option">
                                        <li>
                                            <div class="setting-primary"><i class="fa fa-cog"></i></div>
                                            <ul class="setting-option">
                                                <li><a href="#"><i class="fa fa-refresh"></i> Yenile</a></li>
                                                <li><a href="#"><i class="fa fa-edit"></i> Düzenle</a></li>
                                                <li><a href="#"><i class="fa fa-trash-o"></i> Sil</a></li>
                                            </ul>
                                        </li>
                                        <li><i class="view-html fa fa-code font-white"></i></li>
                                        <li><i data-feather="maximize" class="full-card font-white"></i></li>
                                        <li><i data-feather="minus" class="minimize-card font-white"></i></li>
                                        <li><i data-feather="refresh-cw" class="reload-card font-white"></i></li>
                                        <li><i data-feather="x" class="close-card font-white"></i></li>
                                    </ul>
                        </div>
                            </div>
                        </div>
                        <div class="card-body text-center p-t-0">
                            <h3 class="font-light">Hoş Geldiniz, @User.Identity?.Name!</h3>
                            <p>Muhasebe Stok Web App'e hoş geldiniz! İşletmenizin büyümesine yardımcı olmaktan mutluluk duyarız.</p>
                            <a asp-action="Profile" asp-controller="Account" class="btn btn-light">Profili Güncelle</a>
                        </div>
                        <div class="confetti">
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-6 col-md-3 col-sm-6 box-col-3 des-xl-25 rate-sec">
                    <div class="card income-card">
                        <div class="card-body text-center">
                            <div class="round-box card-green">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trending-up">
                                    <polyline points="23 6 13.5 15.5 8.5 10.5 1 18"></polyline>
                                    <polyline points="17 6 23 6 23 12"></polyline>
                                </svg>
            </div>
                            <h5>@((ViewBag.TotalRevenue != null ? Convert.ToDecimal(ViewBag.TotalRevenue) : 0).ToString("N2")) ₺</h5>
                            <p>Toplam Gelir</p>
                            <a class="btn-arrow arrow-success" href="javascript:void(0)">
                                <i class="toprightarrow-success fa fa-arrow-up me-2"></i>95.54%
                            </a>
                            <div class="parrten">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trending-up">
                                    <polyline points="23 6 13.5 15.5 8.5 10.5 1 18"></polyline>
                                    <polyline points="17 6 23 6 23 12"></polyline>
                                </svg>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-6 col-md-3 col-sm-6 box-col-3 des-xl-25 rate-sec">
                    <div class="card income-card">
                        <div class="card-body text-center">
                            <div class="round-box card-red">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trending-down">
                                    <polyline points="23 18 13.5 8.5 8.5 13.5 1 6"></polyline>
                                    <polyline points="17 18 23 18 23 12"></polyline>
                                </svg>
            </div>
                            <h5>@((ViewBag.TotalExpense != null ? Convert.ToDecimal(ViewBag.TotalExpense) : 0).ToString("N2")) ₺</h5>
                            <p>Toplam Gider</p>
                            <a class="btn-arrow arrow-danger" href="javascript:void(0)">
                                <i class="toprightarrow-danger fa fa-arrow-up me-2"></i>90.54%
                            </a>
                            <div class="parrten">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trending-down">
                                    <polyline points="23 18 13.5 8.5 8.5 13.5 1 6"></polyline>
                                    <polyline points="17 18 23 18 23 12"></polyline>
                                </svg>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-7 box-col-12 des-xl-100 dashboard-sec">
            <div class="card income-card">
                <div class="card-header">
                    <div class="header-top d-sm-flex align-items-center">
                        <h5>Satış Genel Bakış</h5>
                        <div class="center-content">
                            <p class="d-sm-flex align-items-center">
                                <span class="font-primary m-r-10 f-w-700">@(((ViewBag.TotalRevenue != null ? Convert.ToDecimal(ViewBag.TotalRevenue) : 0) - (ViewBag.TotalExpense != null ? Convert.ToDecimal(ViewBag.TotalExpense) : 0)).ToString("N2")) ₺</span>
                                <i class="toprightarrow-primary fa fa-arrow-up m-r-10"></i>86% Geçen yıla göre daha fazla
                            </p>
                        </div>
                        <div class="setting-list">
                            <ul class="list-unstyled setting-option">
                                <li>
                                    <div class="setting-primary"><i class="fa fa-cog"></i></div>
                                </li>
                                <li><i class="view-html fa fa-code font-primary"></i></li>
                                <li><i class="icofont icofont-maximize full-card font-primary"></i></li>
                                <li><i class="icofont icofont-minus minimize-card font-primary"></i></li>
                                <li><i class="icofont icofont-refresh reload-card font-primary"></i></li>
                                <li><i class="icofont icofont-error close-card font-primary"></i></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div id="chart-timeline-dashbord"></div>
                </div>
            </div>
        </div>
        
        <!-- Görev İstatistikleri Bölümü -->
        <div class="col-xl-12 box-col-12 des-xl-100">
            <div class="card">
                <div class="card-header">
                    <div class="header-top d-sm-flex align-items-center">
                        <h5>Görev İstatistikleri</h5>
                        <div class="center-content">
                            <p>
                                <a href="@Url.Action("Index", "Todo")" class="btn btn-outline-primary btn-sm">
                                    <i class="fa fa-list"></i> Tüm Görevler
                                </a>
                                <button type="button" data-bs-toggle="modal" data-bs-target="#newTodoModal" class="btn btn-outline-success btn-sm">
                                    <i class="fa fa-plus"></i> Yeni Görev
                                </button>
                            </p>
                        </div>
                        <div class="setting-list">
                            <ul class="list-unstyled setting-option">
                                <li>
                                    <div class="setting-primary"><i class="fa fa-cog"></i></div>
                                </li>
                                <li><i class="view-html fa fa-code font-primary"></i></li>
                                <li><i class="icofont icofont-maximize full-card font-primary"></i></li>
                                <li><i class="icofont icofont-minus minimize-card font-primary"></i></li>
                                <li><i class="icofont icofont-refresh reload-card font-primary"></i></li>
                                <li><i class="icofont icofont-error close-card font-primary"></i></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body px-0">
                    <div class="container-fluid">
                        @await Component.InvokeAsync("TodoStats")
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-8 box-col-12 des-xl-100">
            <div class="row">
                <div class="col-xl-6 col-50 box-col-6 des-xl-50">
            <div class="card">
                        <div class="card-header">
                            <div class="header-top d-sm-flex align-items-center">
                                <h5>Büyüme Genel Bakış</h5>
                                <div class="center-content">
                                    <p class="d-flex align-items-center">
                                        <i class="toprightarrow-primary fa fa-arrow-up me-2"></i>80% Büyüme
                                    </p>
                </div>
                                <div class="setting-list">
                                    <ul class="list-unstyled setting-option">
                                        <li>
                                            <div class="setting-primary"><i class="fa fa-cog"></i></div>
                                        </li>
                                        <li><i class="view-html fa fa-code font-primary"></i></li>
                                        <li><i class="icofont icofont-maximize full-card font-primary"></i></li>
                                        <li><i class="icofont icofont-minus minimize-card font-primary"></i></li>
                                        <li><i class="icofont icofont-refresh reload-card font-primary"></i></li>
                                        <li><i class="icofont icofont-error close-card font-primary"></i></li>
                                    </ul>
                            </div>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div id="chart-dashbord"></div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-6 col-50 box-col-6 des-xl-50">
                    <div class="card latest-update-sec">
                <div class="card-header">
                            <div class="header-top d-sm-flex align-items-center">
                                <h5>Yapılacaklar (Todo)</h5>
                                <div class="center-content">
                                    <ul class="week-date">
                                        <li class="font-primary">Bekleyenler</li>
                                        <li><a href="@Url.Action("Index", "Todo")">Hepsini Gör</a></li>
                                    </ul>
                </div>
                                <div class="setting-list">
                                    <ul class="list-unstyled setting-option">
                                        <li>
                                            <div class="setting-primary"><i class="fa fa-cog"></i></div>
                                        </li>
                                        <li><i class="view-html fa fa-code font-primary"></i></li>
                                        <li><i class="icofont icofont-maximize full-card font-primary"></i></li>
                                        <li><i class="icofont icofont-minus minimize-card font-primary"></i></li>
                                        <li><i class="icofont icofont-refresh reload-card font-primary"></i></li>
                                        <li><i class="icofont icofont-error close-card font-primary"></i></li>
                                    </ul>
                </div>
            </div>
        </div>
                        <div class="card-body">
                            <div class="table-responsive yapilacaklar-widget">
                                <table class="table table-bordernone">
                                    <tbody>
                                        @if (ViewBag.RecentTodos != null && ViewBag.RecentTodos.Count > 0)
                                        {
                                            foreach (var todo in ViewBag.RecentTodos)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="media">
                                                                <i class="@todo.TaskIcon" style="font-size: 24px; margin-right: 10px;"></i>
                                                                <div class="media-body">
                                                                    <span>@todo.Title</span>
                                                                    <p>
                                                                        @if (todo.Deadline != null)
                                                                        {
                                                                            if (((DateTime)todo.Deadline).Date < DateTime.Now.Date && !todo.IsCompleted)
                                                                            {
                                                                                <span class="text-danger">Gecikmiş: @(((DateTime)todo.Deadline).ToString("dd MMM yyyy"))</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>Son Tarih: @(((DateTime)todo.Deadline).ToString("dd MMM yyyy"))</span>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <span>@todo.TaskCategory</span>
                                                                        }
                                                                    </p>
                </div>
            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex justify-content-end">
                                                                <button type="button" class="btn btn-sm btn-success me-2 complete-todo" data-id="@todo.Id" title="Tamamla">
                                                                    <i class="fa fa-check"></i>
                                                                </button>
                                                                <button type="button" class="btn btn-sm btn-primary edit-todo" data-id="@todo.Id" title="Düzenle">
                                                                    <i class="fa fa-edit"></i>
                                                                </button>
        </div>
                                                    </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="3" class="text-center">
                                                    <p>Aktif görev bulunamadı.</p>
                                                    <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#newTodoModal">
                                                        <i class="fa fa-plus-circle me-1"></i> Yeni Görev Ekle
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                </div>
            </div>
        </div>
                </div>
                <div class="col-xl-12 recent-order-sec">
                    <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                                <h5>Son Siparişler</h5>
                                <table class="table table-bordernone">
                            <thead>
                                <tr>
                                    <th>Ürün</th>
                                            <th>Tarih</th>
                                    <th>Miktar</th>
                                            <th>Değer</th>
                                            <th>Durum</th>
                                            <th>
                                                <div class="setting-list">
                                                    <ul class="list-unstyled setting-option">
                                                        <li>
                                                            <div class="setting-primary"><i class="fa fa-cog"></i></div>
                                                        </li>
                                                        <li><i class="view-html fa fa-code font-primary"></i></li>
                                                        <li><i class="icofont icofont-maximize full-card font-primary"></i></li>
                                                        <li><i class="icofont icofont-minus minimize-card font-primary"></i></li>
                                                        <li><i class="icofont icofont-refresh reload-card font-primary"></i></li>
                                                        <li><i class="icofont icofont-error close-card font-primary"></i></li>
                                                    </ul>
                                                </div>
                                            </th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.TopProducts != null)
                                {
                                    foreach (var product in ViewBag.TopProducts)
                                    {
                                        <tr>
                                                    <td>
                                                        <div class="media">
                                                            <img class="img-fluid rounded-circle" src="~/assets/images/dashboard/product-1.png" alt="" data-original-title="" title="">
                                                            <div class="media-body">
                                                                <a href="javascript:void(0)"><span>@product.ProductName</span></a>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <p>@DateTime.Now.AddDays(-new Random().Next(1, 30)).ToString("dd MMMM")</p>
                                                    </td>
                                                    <td>
                                                        <p>@product.TotalQuantity.ToString("N2")</p>
                                                    </td>
                                                    <td><img class="img-fluid" src="~/assets/images/dashboard/graph-1.png" alt="" data-original-title="" title=""></td>
                                                    <td>
                                                        <p>@product.TotalSales.ToString("N2") TL</p>
                                                    </td>
                                                    <td>
                                                        <p>Tamamlandı</p>
                                                    </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                                <td colspan="6" class="text-center">Veri bulunamadı</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4 box-col-12 des-xl-100">
            <div class="row">
                <div class="col-xl-12 box-col-6 des-xl-50">
            <div class="card">
                <div class="card-header">
                            <div class="header-top d-sm-flex align-items-center">
                                <h5>Kullanıcı Aktiviteleri</h5>
                                <div class="center-content">
                                    <p>Yıllık Kullanıcı 24.65k</p>
                </div>
                                <div class="setting-list">
                                    <ul class="list-unstyled setting-option">
                                        <li>
                                            <div class="setting-primary"><i class="fa fa-cog"></i></div>
                                        </li>
                                        <li><i class="view-html fa fa-code font-primary"></i></li>
                                        <li><i class="icofont icofont-maximize full-card font-primary"></i></li>
                                        <li><i class="icofont icofont-minus minimize-card font-primary"></i></li>
                                        <li><i class="icofont icofont-refresh reload-card font-primary"></i></li>
                                        <li><i class="icofont icofont-error close-card font-primary"></i></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div id="user-activation-dash-2"></div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-12 box-col-6 des-xl-50">
                    <div class="card trasaction-sec">
                        <div class="card-header">
                            <div class="header-top d-sm-flex align-items-center">
                                <h5>İşlemler</h5>
                                <div class="center-content">
                                    <p>5878 Başarılı İşlem</p>
                                </div>
                                <div class="setting-list">
                                    <ul class="list-unstyled setting-option">
                                        <li>
                                            <div class="setting-secondary"><i class="fa fa-cog"></i></div>
                                        </li>
                                        <li><i class="view-html fa fa-code font-secondary"></i></li>
                                        <li><i class="icofont icofont-maximize full-card font-secondary"></i></li>
                                        <li><i class="icofont icofont-minus minimize-card font-secondary"></i></li>
                                        <li><i class="icofont icofont-refresh reload-card font-secondary"></i></li>
                                        <li><i class="icofont icofont-error close-card font-secondary"></i></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="transaction-totalbal">
                            <h2>@(((ViewBag.TotalRevenue != null ? Convert.ToDecimal(ViewBag.TotalRevenue) : 0) - (ViewBag.TotalExpense != null ? Convert.ToDecimal(ViewBag.TotalExpense) : 0)).ToString("N2")) TL
                                <span class="ms-3">
                                    <a class="btn-arrow arrow-secondary" href="javascript:void(0)">
                                        <i class="toprightarrow-secondary fa fa-arrow-up me-2"></i>98.54%
                                    </a>
                                </span>
                            </h2>
                            <p>Toplam Bakiye</p>
                        </div>
                        <div class="card-body p-0">
                            <div id="chart-3dash"></div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Container-fluid bitişi -->

<!-- Todo Modal -->
<div class="modal fade" id="todoModal" tabindex="-1" role="dialog" aria-labelledby="todoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="todoModalLabel">Görev Düzenle</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="editTodoContent">
                <!-- Partial View ile doldurulacak -->
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                    <p class="mt-2">Görev bilgileri yükleniyor...</p>
                </div>
            </div>
                </div>
            </div>
        </div>

<!-- Yeni Todo Modal -->
<div class="modal fade" id="newTodoModal" tabindex="-1" role="dialog" aria-labelledby="newTodoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="newTodoModalLabel">Yeni Görev Ekle</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newTodoForm">
                    <div class="mb-3">
                        <label for="newTodoTitle" class="form-label">Başlık <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="newTodoTitle" name="Title" required maxlength="200">
                        <div class="invalid-feedback">
                            Lütfen bir başlık girin.
                        </div>
                        <small class="text-muted">Başlık içeriğine göre kategori otomatik belirlenecektir.</small>
                    </div>
                    <div class="mb-3">
                        <label for="newTodoDescription" class="form-label">Açıklama</label>
                        <textarea class="form-control" id="newTodoDescription" name="Description" rows="3" maxlength="1000"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="newTodoPriorityLevel" class="form-label">Öncelik <span class="text-danger">*</span></label>
                        <select id="newTodoPriorityLevel" name="PriorityLevel" class="form-select" required>
                            <option value="0">Düşük</option>
                            <option value="1" selected>Orta</option>
                            <option value="2">Yüksek</option>
                        </select>
                        <div class="invalid-feedback">
                            Lütfen bir öncelik seviyesi seçin.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="newTodoDeadline" class="form-label">Son Tarih</label>
                        <input type="date" class="form-control" id="newTodoDeadline" name="Deadline" value="@DateTime.Today.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="mb-3">
                        <label for="newTodoAssignedToUserId" class="form-label">Atanacak Kullanıcı</label>
                        <select id="newTodoAssignedToUserId" name="AssignedToUserId" class="form-select">
                            <option value="">Seçiniz...</option>
                            @if (ViewBag.Users != null)
                            {
                                foreach (var user in ViewBag.Users)
                                {
                                    <option value="@user.Value">@user.Text</option>
                                }
                            }
                        </select>
                        <small class="form-text text-muted">Görevin atanacağı kullanıcıyı seçin. Boş bırakılırsa atanmamış olarak kaydedilir.</small>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input id="useReminderCheckHome" name="UseReminder" class="form-check-input" type="checkbox" value="true" />
                            <input name="UseReminder" type="hidden" value="false" />
                            <label class="form-check-label" for="useReminderCheckHome">Hatırlatma zamanı eklemek istiyorum</label>
                        </div>
                    </div>
                    <div class="mb-3 home-reminder-date-container" style="display: none;">
                        <label for="newTodoReminderAt" class="form-label">Hatırlatma Zamanı</label>
                        <input id="newTodoReminderAt" name="ReminderAt" type="datetime-local" class="form-control" />
                        <small class="form-text text-muted">Görevin hatırlatılacağı tarih ve saat</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="addTodoBtn">Ekle</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/dashboard/default.js"></script>
    <!-- Toastr Kütüphanesi -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script>
        // Sayfa yüklendiğinde
        $(document).ready(function () {
            // Toastr ayarları
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "3000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            
            // Hatırlatma seçeneği değiştiğinde hatırlatma tarih alanını göster/gizle
            $('#useReminderCheckHome').change(function() {
                if ($(this).is(':checked')) {
                    $('.home-reminder-date-container').show();
                    
                    // Bugünün tarihini ve şu anki saati + 1 saat varsayılan olarak ayarla
                    var now = new Date();
                    now.setHours(now.getHours() + 1); // 1 saat sonrası
                    var localDatetime = new Date(now.getTime() - now.getTimezoneOffset() * 60000)
                        .toISOString()
                        .slice(0, 16);
                    
                    $('#newTodoReminderAt').val(localDatetime);
                } else {
                    $('.home-reminder-date-container').hide();
                }
            });
            
            // Todo düzenleme modalını açma
            $('.edit-todo').on('click', function () {
                var todoId = $(this).data('id');
                
                // Modal içeriğini temizle
                $("#editTodoContent").html('<div class="text-center p-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Yükleniyor...</span></div><p class="mt-2">Görev bilgileri yükleniyor...</p></div>');
                
                // Modalı göster
                $('#todoModal').modal('show');
                
                // AJAX ile görev düzenleme modalını getir
                $.ajax({
                    url: '@Url.Action("Edit", "Todo")/' + todoId,
                    type: 'GET',
                    success: function(response) {
                        $("#editTodoContent").html(response);
                    },
                    error: function() {
                        $("#editTodoContent").html('<div class="alert alert-danger">Görev bilgileri yüklenirken bir hata oluştu.</div>');
                    }
                });
            });
            
            // Görevi Tamamlama
            $('.complete-todo').on('click', function () {
                var todoId = $(this).data('id');
                
                $.ajax({
                    url: '@Url.Action("ToggleComplete", "Todo")',
                    type: 'POST',
                    data: { id: todoId },
                    success: function (data) {
                        if (data.success) {
                            // Satırın görünümünü güncelle
                            var row = $('tr[data-todo-id="' + todoId + '"]');
                            if (data.isCompleted) {
                                row.addClass('table-success');
                                row.find('.complete-todo').html('<i class="fa fa-check-circle"></i> Tamamlandı');
                            } else {
                                row.removeClass('table-success');
                                row.find('.complete-todo').html('<i class="fa fa-clock"></i> Tamamla');
                            }
                            
                            // Başarı mesajı
                            toastr.success(data.message || 'Görev durumu güncellendi');
                            
                            // Sayfayı 1 saniye sonra yenile
                            setTimeout(function() {
                                window.location.reload();
                            }, 1000);
                        } else {
                            toastr.error(data.message || 'Görev durumu güncellenirken bir hata oluştu');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Görev tamamlanırken hata oluştu:', error);
                        toastr.error('Bir hata oluştu. Lütfen tekrar deneyin.');
                    }
                });
            });
            
            // Yeni görev ekleme
            $('#addTodoBtn').on('click', function () {
                // Form validasyonu
                const form = document.getElementById('newTodoForm');
                if (!form.checkValidity()) {
                    // Form geçerli değil, bootstrap validasyonunu göster
                    form.classList.add('was-validated');
                    return;
                }
                
                var title = $("#newTodoTitle").val().trim();
                var description = $("#newTodoDescription").val().trim();
                var priorityLevel = $("#newTodoPriorityLevel").val();
                var deadline = $("#newTodoDeadline").val();
                var assignedToUserId = $("#newTodoAssignedToUserId").val();
                var useReminder = $("#useReminderCheckHome").is(":checked");
                var reminderAt = $("#newTodoReminderAt").val();
                
                // Doğrulama
                if (!title) {
                    toastr.error("Başlık alanı zorunludur");
                    return;
                }
                
                // Hatırlatma zamanı kontrol
                if (useReminder && reminderAt) {
                    var reminderDate = new Date(reminderAt);
                    var now = new Date();
                    if (reminderDate < now) {
                        toastr.error("Hatırlatma zamanı geçmiş bir zaman olamaz");
                        return;
                    }
                }
                
                // Form verilerini topla
                var formData = {
                    Title: title,
                    Description: description,
                    PriorityLevel: priorityLevel,
                    Deadline: deadline,
                    AssignedToUserId: assignedToUserId,
                    UseReminder: useReminder,
                    ReminderAt: useReminder ? reminderAt : null
                };
                
                $.ajax({
                    url: '@Url.Action("Create", "Todo")',
                    type: 'POST',
                    data: formData,
                    success: function (data) {
                        if (data.success) {
                            // Modalı kapat
                            $('#newTodoModal').modal('hide');
                            
                            // Başarı bildirimi
                            toastr.success(data.message || 'Görev başarıyla eklendi');
                            
                            // Formu temizle
                            $("#newTodoForm")[0].reset();
                            $('.home-reminder-date-container').hide();
                            form.classList.remove('was-validated');
                            
                            // Sayfayı yenile
                            setTimeout(function() {
                                window.location.reload();
                            }, 1000);
                        } else {
                            toastr.error(data.message || 'Görev eklenirken bir hata oluştu');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Görev eklenirken bir hata oluştu: ' + 
                            (xhr.responseJSON ? xhr.responseJSON.message : 'Bilinmeyen hata'));
                    }
                });
            });
            
            // Tema değişikliğinde grafikleri yeniden çizdirelim
            $('.mode').on('click', function () {
                setTimeout(function () {
                    window.dispatchEvent(new Event('resize'));
                }, 500);
            });
            
            // Stiller düzenlemeleri
            $('.card-option li i, .setting-option li i').each(function() {
                // Orjinal ikon sınıflarını koruyarak feather ikonları oluştur
                var iconClass = $(this).attr('class');
                if (iconClass.includes('icofont-maximize')) {
                    $(this).addClass('feather').addClass('icon-maximize');
                }
                if (iconClass.includes('icofont-minus')) {
                    $(this).addClass('feather').addClass('icon-minus');
                }
                if (iconClass.includes('icofont-plus')) {
                    $(this).addClass('feather').addClass('icon-plus');
                }
                if (iconClass.includes('icofont-refresh')) {
                    $(this).addClass('feather').addClass('icon-refresh-cw');
                }
                if (iconClass.includes('icofont-error')) {
                    $(this).addClass('feather').addClass('icon-x');
                }
            });
            
            // Setting ikonu için stiller
            $('.setting-primary i, .setting-secondary i').each(function() {
                $(this).addClass('icon-settings');
            });
        });
    </script>
}
