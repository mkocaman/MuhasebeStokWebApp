@model MuhasebeStokWebApp.ViewModels.Kasa.KasaListViewModel
@{
    ViewData["Title"] = "Kasalar";
}

<div class="container-fluid">
    <div class="page-title">
        <div class="row">
            <div class="col-6">
                <h3>Kasalar</h3>
            </div>
            <div class="col-6">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/"><i data-feather="home"></i></a></li>
                    <li class="breadcrumb-item active">Kasalar</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Kasa Listesi</h5>
                    <div>
                        <a asp-action="YeniHareket" class="btn btn-success btn-sm">
                            <i class="fa fa-plus"></i> Yeni Hareket
                        </a>
                        <a asp-action="Create" class="btn btn-primary btn-sm">
                            <i class="fa fa-plus"></i> Yeni Kasa
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover" id="kasaTable">
                            <thead class="table-light">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.Kasalar.FirstOrDefault().KasaAdi)</th>
                                    <th>@Html.DisplayNameFor(model => model.Kasalar.FirstOrDefault().KasaTuru)</th>
                                    <th>@Html.DisplayNameFor(model => model.Kasalar.FirstOrDefault().AcilisBakiye)</th>
                                    <th>@Html.DisplayNameFor(model => model.Kasalar.FirstOrDefault().GuncelBakiye)</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Kasalar.Count == 0)
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">Kayıt bulunamadı.</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var kasa in Model.Kasalar)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(model => kasa.KasaAdi)</td>
                                            <td>@Html.DisplayFor(model => kasa.KasaTuru)</td>
                                            <td class="text-end">@kasa.AcilisBakiye.ToString("N2") ₺</td>
                                            <td class="text-end @(kasa.GuncelBakiye >= 0 ? "text-success" : "text-danger")">
                                                @kasa.GuncelBakiye.ToString("N2") ₺
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Hareketler" asp-route-id="@kasa.KasaID" class="btn btn-sm btn-secondary">
                                                        <i class="fas fa-exchange-alt"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@kasa.KasaID" class="btn btn-sm btn-warning">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Details" asp-route-id="@kasa.KasaID" class="btn btn-sm btn-info">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@kasa.KasaID" class="btn btn-sm btn-danger">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                            <tfoot>
                                <tr class="table-primary">
                                    <th colspan="3" class="text-right">Toplam Bakiye:</th>
                                    <th class="text-right">@Model.ToplamBakiye.ToString("N2") ₺</th>
                                    <th colspan="2"></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // DataTable başlatma
            try {
                $('#kasaTable').DataTable({
                    language: {
                        "emptyTable": "Tabloda herhangi bir veri mevcut değil",
                        "info": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                        "infoEmpty": "Kayıt yok",
                        "infoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                        "infoPostFix": "",
                        "thousands": ".",
                        "lengthMenu": "Sayfada _MENU_ kayıt göster",
                        "loadingRecords": "Yükleniyor...",
                        "processing": "İşleniyor...",
                        "search": "Ara:",
                        "zeroRecords": "Eşleşen kayıt bulunamadı",
                        "paginate": {
                            "first": "İlk",
                            "last": "Son",
                            "next": "Sonraki",
                            "previous": "Önceki"
                        }
                    },
                    responsive: true,
                    retrieve: true
                });
            } catch (e) {
                console.log("DataTable başlatılırken bir hata oluştu, ancak işlem devam ediyor.");
            }

            // Otomatik kapanan alertler
            window.setTimeout(function() {
                $(".alert").fadeTo(500, 0).slideUp(500, function() {
                    $(this).remove();
                });
            }, 4000);

            // SweetAlert ile başarı mesajı göster
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Swal.fire({
                    title: 'Başarılı!',
                    text: '@TempData["SuccessMessage"]',
                    icon: 'success',
                    confirmButtonText: 'Tamam'
                });
                </text>
            }
        });
    </script>
} 