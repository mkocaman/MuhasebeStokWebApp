@model MuhasebeStokWebApp.Data.Entities.KasaHareket
@{
    ViewData["Title"] = "Yeni Kasa Hareketi";
    var kasalar = ViewBag.Kasalar as List<MuhasebeStokWebApp.Data.Entities.Kasa> ?? new List<MuhasebeStokWebApp.Data.Entities.Kasa>();
    var cariler = ViewBag.Cariler as List<MuhasebeStokWebApp.Data.Entities.Cari> ?? new List<MuhasebeStokWebApp.Data.Entities.Cari>();
    var secilenKasa = ViewBag.SecilenKasa as MuhasebeStokWebApp.Data.Entities.Kasa;
    var secilenCari = ViewBag.SecilenCari as MuhasebeStokWebApp.Data.Entities.Cari;
}

<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Yeni Kasa Hareketi</h6>
            <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                <i class="fas fa-arrow-left"></i> Listeye Dön
            </a>
        </div>
        <div class="card-body">
            <form asp-action="YeniHareket" method="post" id="kasaHareketForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="KasaID" class="control-label">Kasa</label>
                            <select id="KasaID" name="KasaID" class="form-control" required>
                                <option value="">Kasa Seçiniz</option>
                                @foreach (var kasa in kasalar)
                                {
                                    if (Model.KasaID == kasa.KasaID)
                                    {
                                        <option value="@kasa.KasaID" data-parabirimi="@kasa.ParaBirimi" selected>
                                            @kasa.KasaAdi (@kasa.ParaBirimi) - Bakiye: @kasa.GuncelBakiye.ToString("N2")
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@kasa.KasaID" data-parabirimi="@kasa.ParaBirimi">
                                            @kasa.KasaAdi (@kasa.ParaBirimi) - Bakiye: @kasa.GuncelBakiye.ToString("N2")
                                        </option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="KasaID" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="HareketTuru" class="control-label">Hareket Türü</label>
                            <select id="HareketTuru" name="HareketTuru" class="form-control" required>
                                <option value="">Hareket Türü Seçiniz</option>
                                <option value="Giriş">Giriş</option>
                                <option value="Çıkış">Çıkış</option>
                            </select>
                            <span asp-validation-for="HareketTuru" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="CariID" class="control-label">Cari</label>
                            <select id="CariID" name="CariID" class="form-control">
                                <option value="">Cari Seçiniz</option>
                                @foreach (var cari in cariler)
                                {
                                    if (Model.CariID == cari.CariID)
                                    {
                                        <option value="@cari.CariID" selected>
                                            @cari.Ad - @cari.CariTipi
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@cari.CariID">
                                            @cari.Ad - @cari.CariTipi
                                        </option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="CariID" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Tutar" class="control-label">Tutar</label>
                            <div class="input-group">
                                <input type="number" id="Tutar" name="Tutar" class="form-control" 
                                       min="0.01" step="0.01" required value="@(Model.Tutar > 0 ? Model.Tutar : 0)" />
                                <div class="input-group-append">
                                    <span class="input-group-text" id="paraBirimiLabel">
                                        @(secilenKasa != null ? secilenKasa.ParaBirimi : "TRY")
                                    </span>
                                </div>
                            </div>
                            <span asp-validation-for="Tutar" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="ReferansTuru" class="control-label">Referans Türü</label>
                            <select id="ReferansTuru" name="ReferansTuru" class="form-control">
                                <option value="">Referans Türü Seçiniz</option>
                                <option value="Tahsilat">Tahsilat</option>
                                <option value="Ödeme">Ödeme</option>
                                <option value="Nakit">Nakit</option>
                                <option value="Diğer">Diğer</option>
                            </select>
                            <span asp-validation-for="ReferansTuru" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="ReferansNo" class="control-label">Referans No</label>
                            <input type="text" id="ReferansNo" name="ReferansNo" class="form-control" value="@Model.ReferansNo" />
                            <span asp-validation-for="ReferansNo" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="Aciklama" class="control-label">Açıklama</label>
                    <textarea id="Aciklama" name="Aciklama" class="form-control" rows="3">@Model.Aciklama</textarea>
                    <span asp-validation-for="Aciklama" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Kaydet
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> İptal
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Kasa seçildiğinde para birimini güncelle
            $("#KasaID").change(function() {
                var selectedOption = $(this).find("option:selected");
                var paraBirimi = selectedOption.data("parabirimi") || "TRY";
                $("#paraBirimiLabel").text(paraBirimi);
            });
            
            // Hareket türü değiştiğinde referans türlerini güncelle
            $("#HareketTuru").change(function() {
                var hareketTuru = $(this).val();
                var referansTuruSelect = $("#ReferansTuru");
                
                referansTuruSelect.empty();
                referansTuruSelect.append('<option value="">Referans Türü Seçiniz</option>');
                
                if (hareketTuru === "Giriş") {
                    referansTuruSelect.append('<option value="Tahsilat">Tahsilat</option>');
                    referansTuruSelect.append('<option value="Nakit">Nakit</option>');
                    referansTuruSelect.append('<option value="Diğer">Diğer</option>');
                } else if (hareketTuru === "Çıkış") {
                    referansTuruSelect.append('<option value="Ödeme">Ödeme</option>');
                    referansTuruSelect.append('<option value="Nakit">Nakit</option>');
                    referansTuruSelect.append('<option value="Diğer">Diğer</option>');
                }
            });
            
            // Referans türü seçildiğinde referans no oluştur
            $("#ReferansTuru").change(function() {
                var referansTuru = $(this).val();
                if (referansTuru && !$("#ReferansNo").val()) {
                    var prefix = "";
                    switch (referansTuru) {
                        case "Tahsilat": prefix = "TAH"; break;
                        case "Ödeme": prefix = "ODE"; break;
                        case "Nakit": prefix = "NAK"; break;
                        default: prefix = "REF"; break;
                    }
                    
                    var today = new Date();
                    var year = today.getFullYear().toString().substr(-2);
                    var month = (today.getMonth() + 1).toString().padStart(2, '0');
                    var day = today.getDate().toString().padStart(2, '0');
                    var random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');
                    
                    $("#ReferansNo").val(prefix + "-" + year + month + day + "-" + random);
                }
            });
            
            // Form gönderilmeden önce kontrol
            $("#kasaHareketForm").submit(function(e) {
                var kasaID = $("#KasaID").val();
                var hareketTuru = $("#HareketTuru").val();
                var tutar = parseFloat($("#Tutar").val()) || 0;
                
                if (!kasaID) {
                    e.preventDefault();
                    alert("Lütfen bir kasa seçin!");
                    return false;
                }
                
                if (!hareketTuru) {
                    e.preventDefault();
                    alert("Lütfen hareket türü seçin!");
                    return false;
                }
                
                if (tutar <= 0) {
                    e.preventDefault();
                    alert("Lütfen geçerli bir tutar girin!");
                    return false;
                }
                
                return true;
            });
        });
    </script>
} 