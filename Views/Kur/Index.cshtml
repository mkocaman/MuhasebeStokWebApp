@{
    ViewData["Title"] = "Döviz Kurları";
    var paraBirimleri = ViewBag.ParaBirimleri as List<MuhasebeStokWebApp.Data.Entities.ParaBirimi>;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Döviz Kurları</h3>
                </div>
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label class="form-label">Kaynak Para Birimi</label>
                            <select id="kaynakParaBirimi" class="form-select">
                                <option value="">Seçiniz...</option>
                                @if (paraBirimleri != null)
                                {
                                    foreach (var paraBirimi in paraBirimleri)
                                    {
                                        <option value="@paraBirimi.Kod">@paraBirimi.Ad (@paraBirimi.Kod)</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Hedef Para Birimi</label>
                            <select id="hedefParaBirimi" class="form-select">
                                <option value="">Seçiniz...</option>
                                @if (paraBirimleri != null)
                                {
                                    foreach (var paraBirimi in paraBirimleri)
                                    {
                                        <option value="@paraBirimi.Kod">@paraBirimi.Ad (@paraBirimi.Kod)</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button id="btnKurGetir" class="btn btn-primary">Kur Getir</button>
                        </div>
                    </div>
                    
                    <div id="kurSonucContainer" class="mt-4 d-none">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">Kur Sonucu</h4>
                            </div>
                            <div class="card-body">
                                <h3 class="text-center" id="kurSonuc">
                                    <span id="kaynakKod"></span> 1.00 = <span id="hedefKod"></span> <span id="kurDegeri"></span>
                                </h3>
                                <p class="text-center text-muted mt-2">
                                    Kur tarihi: <span id="kurTarihi"></span>
                                </p>
                            </div>
                        </div>
                    </div>
                    
                    <div id="kurHataContainer" class="mt-4 d-none">
                        <div class="alert alert-danger">
                            <p id="kurHataMessage"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $("#btnKurGetir").click(function() {
                const kaynakKod = $("#kaynakParaBirimi").val();
                const hedefKod = $("#hedefParaBirimi").val();
                
                // Sonuç ve hata containerlarını gizle
                $("#kurSonucContainer").addClass("d-none");
                $("#kurHataContainer").addClass("d-none");
                
                if (!kaynakKod || !hedefKod) {
                    $("#kurHataMessage").text("Lütfen kaynak ve hedef para birimlerini seçin.");
                    $("#kurHataContainer").removeClass("d-none");
                    return;
                }
                
                // Kur değerini getir
                $.ajax({
                    url: '@Url.Action("GuncelKur", "Kur")',
                    data: { kaynakKod: kaynakKod, hedefKod: hedefKod },
                    type: 'GET',
                    success: function(result) {
                        if (result.basari) {
                            $("#kaynakKod").text(kaynakKod);
                            $("#hedefKod").text(hedefKod);
                            $("#kurDegeri").text(result.kurDegeri.toFixed(4));
                            $("#kurTarihi").text(new Date().toLocaleString());
                            $("#kurSonucContainer").removeClass("d-none");
                        } else {
                            $("#kurHataMessage").text(result.hata);
                            $("#kurHataContainer").removeClass("d-none");
                        }
                    },
                    error: function(error) {
                        $("#kurHataMessage").text("Kur değeri alınırken bir hata oluştu.");
                        $("#kurHataContainer").removeClass("d-none");
                        console.error("Hata:", error);
                    }
                });
            });
        });
    </script>
} 