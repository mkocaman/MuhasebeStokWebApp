@model MuhasebeStokWebApp.ViewComponents.TableViewModel<dynamic>

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">@ViewBag.Title</h6>
        <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                <div class="dropdown-header">İşlemler:</div>
                <a class="dropdown-item" href="@(ViewContext.RouteData.Values["controller"].ToString() + "/Create")">
                    <i class="fas fa-plus fa-sm fa-fw mr-2 text-gray-400"></i>Yeni Ekle
                </a>
                <a class="dropdown-item" href="#" onclick="exportToExcel()">
                    <i class="fas fa-file-excel fa-sm fa-fw mr-2 text-gray-400"></i>Excel'e Aktar
                </a>
                <a class="dropdown-item" href="#" onclick="printTable()">
                    <i class="fas fa-print fa-sm fa-fw mr-2 text-gray-400"></i>Yazdır
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        @foreach (var columnName in Model.ColumnNames)
                        {
                            <th>@columnName</th>
                        }
                        @if (Model.IncludeActions)
                        {
                            <th>İşlemler</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            @foreach (var propName in Model.PropertyNames)
                            {
                                <td>@item.GetType().GetProperty(propName).GetValue(item, null)</td>
                            }
                            @if (Model.IncludeActions)
                            {
                                <td>
                                    <div class="btn-group">
                                        @foreach (var action in Model.ActionButtons)
                                        {
                                            var id = item.GetType().GetProperty(Model.IdProperty).GetValue(item, null);
                                            <a href="/@ViewContext.RouteData.Values["controller"]/@action/@id" 
                                               class="btn btn-sm @(GetButtonClass(action))">
                                                <i class="fas @(GetIconClass(action))"></i> @action
                                            </a>
                                        }
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        @if (Model.TotalPages > 1)
        {
            <div class="row">
                <div class="col-sm-12 col-md-5">
                    <div class="dataTables_info" role="status" aria-live="polite">
                        Toplam @Model.Items.Count() kayıttan @((Model.CurrentPage - 1) * Model.PageSize + 1) - @Math.Min(Model.CurrentPage * Model.PageSize, Model.Items.Count()) arası gösteriliyor
                    </div>
                </div>
                <div class="col-sm-12 col-md-7">
                    <div class="dataTables_paginate paging_simple_numbers">
                        <ul class="pagination">
                            <li class="paginate_button page-item previous @(Model.CurrentPage == 1 ? "disabled" : "")">
                                <a href="?page=@(Model.CurrentPage - 1)" class="page-link">Önceki</a>
                            </li>
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="paginate_button page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a href="?page=@i" class="page-link">@i</a>
                                </li>
                            }
                            <li class="paginate_button page-item next @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                <a href="?page=@(Model.CurrentPage + 1)" class="page-link">Sonraki</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    public string GetButtonClass(string action)
    {
        return action.ToLower() switch
        {
            "edit" => "btn-primary",
            "details" => "btn-info",
            "delete" => "btn-danger",
            _ => "btn-secondary"
        };
    }
    
    public string GetIconClass(string action)
    {
        return action.ToLower() switch
        {
            "edit" => "fa-edit",
            "details" => "fa-info-circle",
            "delete" => "fa-trash",
            _ => "fa-cog"
        };
    }
} 